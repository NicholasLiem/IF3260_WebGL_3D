import { BufferAttribute } from '../../BufferAttribute';
import { BufferGeometry } from '../../BufferGeometry';

export class HollowTrianglePrism extends BufferGeometry {
  constructor(width = 1, height = 1, depth = 1, thickness = 0.2) {
    super();
    const hw = width / 2;
    const hh = height / 2;
    const hd = depth / 2;
    const t = thickness / 2;

    const vertices = new Float32Array([
      //Corner 1
      //X Y Z
      //Corner left front
      -hw,
      -t,
      hd, //0
      -hw,
      0,
      hd, //1
      -hw - t,
      -t,
      hd, //2
      -hw - t,
      0,
      hd, //3

      //Corner 2
      //Corner right front
      hw,
      -t,
      hd, //4
      hw,
      0,
      hd, //5
      hw + t,
      -t,
      hd, //6
      hw + t,
      0,
      hd, //7

      //Corner 3
      //Corner right back
      hw,
      -t,
      -hd, //8
      hw,
      0,
      -hd, //9
      hw + t,
      -t,
      -hd, //10
      hw + t,
      0,
      -hd, //11

      //Corner 4
      //Corner left back
      -hw,
      -t,
      -hd, //12
      -hw,
      0,
      -hd, //13
      -hw - t,
      -t,
      -hd, //14
      -hw - t,
      0,
      -hd, //15

      //Top Front
      -t / 2,
      hh,
      hd, //16
      -t / 2,
      hh + t,
      hd, //17
      t / 2,
      hh,
      hd, //18
      t / 2,
      hh + t,
      hd, //19

      //Top Back
      -t / 2,
      hh,
      -hd, //20
      -t / 2,
      hh + t,
      -hd, //21
      t / 2,
      hh,
      -hd, //22
      t / 2,
      hh + t,
      -hd, //23

      //Front Front Corner Left
      -hw,
      -t,
      hd + t, //24
      -hw,
      0,
      hd + t, //25
      -hw - t,
      -t,
      hd + t, //26
      -hw - t,
      0,
      hd + t, //27

      //Front Front Corner Right
      hw,
      -t,
      hd + t, //28
      hw,
      0,
      hd + t, //29
      hw + t,
      -t,
      hd + t, //30
      hw + t,
      0,
      hd + t, //31

      //Front Front Top
      -t / 2,
      hh,
      hd + t, //32
      -t / 2,
      hh + t,
      hd + t, //33
      t / 2,
      hh,
      hd + t, //34
      t / 2,
      hh + t,
      hd + t, //35

      //Back Back Corner Left
      -hw,
      -t,
      -hd - t, //36
      -hw,
      0,
      -hd - t, //37
      -hw - t,
      -t,
      -hd - t, //38
      -hw - t,
      0,
      -hd - t, //39

      //Back Back Corner Right
      hw,
      -t,
      -hd - t, //40
      hw,
      0,
      -hd - t, //41
      hw + t,
      -t,
      -hd - t, //42
      hw + t,
      0,
      -hd - t, //43

      //Back Back Top
      -t / 2,
      hh,
      -hd - t, //44
      -t / 2,
      hh + t,
      -hd - t, //45
      t / 2,
      hh,
      -hd - t, //46
      t / 2,
      hh + t,
      -hd - t, //47
    ]);

    const colors = new Float32Array([
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1, // bottom face
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1, // top face
      // back corner
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1, // bottom face
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1, // top face
      // left corner
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1, // bottom face
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1, // top face
      // bottom corner
      1,
      0.5,
      1,
      1,
      1,
      0.5,
      1,
      1,
      1,
      0.5,
      1,
      1,
      1,
      0.5,
      1,
      1, // bottom face
      1,
      0.5,
      1,
      1,
      1,
      0.5,
      1,
      1,
      1,
      0.5,
      1,
      1,
      1,
      0.5,
      1,
      1, // top face
      // top corner
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1, // bottom face
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1,
      1,
      1,
      0,
      1, // top face
      // front corner
      1,
      0,
      0,
      1,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      1,
      0,
      1, // bottom face
      1,
      0,
      0,
      1,
      1,
      0,
      0,
      1,
      1,
      1,
      0,
      0,
      1,
      1,
      0,
      1, // top face
    ]);

    const indices = new Uint16Array([
      //Front
      2,
      6,
      7,
      2,
      7,
      3,
      3,
      1,
      16,
      3,
      16,
      17,
      7,
      19,
      18,
      7,
      18,
      5,
      26,
      30,
      31,
      26,
      31,
      27,
      6,
      31,
      30,
      6,
      7,
      31,
      2,
      26,
      27,
      2,
      27,
      3,
      30,
      26,
      2,
      30,
      2,
      6,
      27,
      31,
      7,
      27,
      7,
      3,

      34,
      35,
      33,
      34,
      33,
      32,
      35,
      19,
      17,
      35,
      17,
      33,
      34,
      32,
      16,
      34,
      16,
      18,

      25,
      1,
      16,
      25,
      16,
      32, //kanan
      25,
      32,
      33,
      25,
      33,
      27, //depan
      27,
      33,
      17,
      27,
      17,
      3, //kiri
      1,
      17,
      16,
      1,
      3,
      17, //belakang

      29,
      31,
      35,
      29,
      35,
      34,
      31,
      7,
      19,
      31,
      19,
      35,
      5,
      18,
      19,
      5,
      19,
      7,
      29,
      34,
      18,
      29,
      18,
      5,

      //Right
      6,
      10,
      11,
      6,
      11,
      7,
      5,
      7,
      11,
      5,
      11,
      9,
      5,
      9,
      8,
      5,
      8,
      4,
      4,
      10,
      6,
      4,
      8,
      10,
      //Back
      10,
      14,
      15,
      10,
      15,
      11,
      15,
      21,
      13,
      13,
      21,
      20,
      9,
      22,
      11,
      11,
      22,
      23,

      21,
      23,
      47,
      21,
      47,
      45,
      44,
      45,
      47,
      44,
      47,
      46,
      20,
      44,
      46,
      20,
      46,
      22,

      13,
      20,
      21,
      13,
      21,
      15,
      15,
      21,
      45,
      15,
      45,
      37,
      39,
      45,
      44,
      39,
      37,
      45,
      13,
      39,
      44,
      13,
      44,
      20,

      22,
      9,
      11,
      22,
      11,
      23,
      23,
      11,
      43,
      23,
      43,
      47,
      46,
      43,
      41,
      46,
      47,
      43,
      22,
      41,
      9,
      22,
      46,
      41,

      15,
      11,
      42,
      15,
      42,
      39,
      38,
      39,
      42,
      38,
      42,
      43,
      14,
      38,
      43,
      14,
      43,
      10,
      14,
      15,
      39,
      14,
      39,
      38,
      10,
      43,
      42,
      10,
      42,
      11,
      //Left
      14,
      2,
      3,
      14,
      3,
      15,
      1,
      13,
      15,
      1,
      15,
      3,
      0,
      12,
      13,
      0,
      13,
      1,
      0,
      2,
      14,
      0,
      14,
      12,
      //Top
      17,
      21,
      20,
      17,
      20,
      16,
      23,
      19,
      22,
      19,
      18,
      22,
      17,
      19,
      23,
      17,
      23,
      21,
      16,
      20,
      22,
      16,
      22,
      18,
    ]);

    this.setAttribute('position', new BufferAttribute(vertices, 3));
    this.setAttribute('color', new BufferAttribute(colors, 4));
    this.setAttribute('texCoord', new BufferAttribute(new Float32Array([]), 2));
    this.setAttribute('tangent', new BufferAttribute(new Float32Array([]), 3));
    this.setIndices(new BufferAttribute(indices, 1));
    this.calculateNormals();
  }
}
